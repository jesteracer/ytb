# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.YouTube.V3.Model.LiveChatMessageSnippet do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"authorChannelId",
    :"displayMessage",
    :"fanFundingEventDetails",
    :"hasDisplayContent",
    :"liveChatId",
    :"messageDeletedDetails",
    :"messageRetractedDetails",
    :"pollClosedDetails",
    :"pollEditedDetails",
    :"pollOpenedDetails",
    :"pollVotedDetails",
    :"publishedAt",
    :"superChatDetails",
    :"textMessageDetails",
    :"type",
    :"userBannedDetails"
  ]
end

defimpl Poison.Decoder, for: GoogleApi.YouTube.V3.Model.LiveChatMessageSnippet do
  import GoogleApi.YouTube.V3.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"fanFundingEventDetails", :struct, GoogleApi.YouTube.V3.Model.LiveChatFanFundingEventDetails, options)
    |> deserialize(:"messageDeletedDetails", :struct, GoogleApi.YouTube.V3.Model.LiveChatMessageDeletedDetails, options)
    |> deserialize(:"messageRetractedDetails", :struct, GoogleApi.YouTube.V3.Model.LiveChatMessageRetractedDetails, options)
    |> deserialize(:"pollClosedDetails", :struct, GoogleApi.YouTube.V3.Model.LiveChatPollClosedDetails, options)
    |> deserialize(:"pollEditedDetails", :struct, GoogleApi.YouTube.V3.Model.LiveChatPollEditedDetails, options)
    |> deserialize(:"pollOpenedDetails", :struct, GoogleApi.YouTube.V3.Model.LiveChatPollOpenedDetails, options)
    |> deserialize(:"pollVotedDetails", :struct, GoogleApi.YouTube.V3.Model.LiveChatPollVotedDetails, options)
    |> deserialize(:"superChatDetails", :struct, GoogleApi.YouTube.V3.Model.LiveChatSuperChatDetails, options)
    |> deserialize(:"textMessageDetails", :struct, GoogleApi.YouTube.V3.Model.LiveChatTextMessageDetails, options)
    |> deserialize(:"userBannedDetails", :struct, GoogleApi.YouTube.V3.Model.LiveChatUserBannedMessageDetails, options)
  end
end

